@model Admin.ViewModels.ProductViewModel
@{
    ViewBag.Title = "Product";
    Layout = "~/Views/Shared/_LayOut.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">@ViewBag.Title</h3>
            </div>
            @using (Html.BeginForm("Add", "Product", new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                <div class="box-body">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.DisplayNameFor(m => m.ProductDto.ProductName)
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.ProductDto.ProductName, new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationMessageFor(model => model.ProductDto.ProductName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.DisplayNameFor(m => m.ProductDto.Price)
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.ProductDto.Price, new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationMessageFor(model => model.ProductDto.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.DisplayNameFor(m => m.ProductDto.DiscountPrice)
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.ProductDto.DiscountPrice, new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationMessageFor(model => model.ProductDto.DiscountPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.DisplayNameFor(m => m.ProductDto.UnitAvailable)
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.ProductDto.UnitAvailable, new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationMessageFor(model => model.ProductDto.UnitAvailable, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.DisplayNameFor(m => m.ProductDto.CategoryId)
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.ProductDto.CategoryId, new SelectList(Model.CategoryDropdown, "CategoryId", "CategoryName"), "-- Select Category --", new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationMessageFor(model => model.ProductDto.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.DisplayNameFor(m => m.ProductDto.DisplayStatus)
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.ProductDto.DisplayStatus, new SelectList(Model.StatusDropdown, "Display", "Status"), "-- Display Status --", new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationMessageFor(model => model.ProductDto.DisplayStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.DisplayNameFor(m => m.ProductDto.TagId)
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.ProductDto.TagId, new SelectList(Model.TagsDropdown, "TagId", "TagName"), "-- Select Tag --", new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationMessageFor(model => model.ProductDto.TagId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.DisplayNameFor(m => m.ProductDto.Description)
                            </div>
                            <div class="col-md-10">
                                @Html.TextAreaFor(m => m.ProductDto.Description, new { id = "editor1", name = "editor1", rows = "10", cols = "80" })
                            </div>
                        </div>
                    </div>
                </div><!-- /.box-body -->
                <div class="box-footer">
                    <button type="submit" class="btn btn-default">Cancel</button>
                    <button type="submit" class="btn btn-info pull-right">Save</button>
                </div><!-- /.box-footer -->
            }
        </div><!-- /.box -->
    </div>
</div>
@section scripts{
    <!-- CK Editor -->
    <script src="https://cdn.ckeditor.com/4.4.3/standard/ckeditor.js"></script>
    @*<script src="~/admin-lte/js/ckeditor.js"></script>*@
    <script>
        $(function () {
            // Replace the <textarea id="editor1"> with a CKEditor
            // instance, using default configuration.
            CKEDITOR.replace('editor1');
        });
    </script>
}