@model Admin.ViewModels.ProductViewModel

@{
    ViewBag.Title = "Set Product";
    Layout = "~/Views/Shared/_LayOut.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-12">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Horizontal Form</h3>
                </div>
                <form class="form-horizontal">
                    <div class="box-body">
                        <div class="form-group">
                            @Html.DisplayNameFor(m => m.ProductDto.ProductName)
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.ProductDto.ProductName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductDto.ProductName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.DisplayNameFor(m => m.ProductDto.CategoryId)
                            <div class="col-sm-10">
                                @Html.DropDownListFor(m => m.ProductDto.CategoryId, new SelectList(Model.CategoryDropdown), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductDto.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.DisplayNameFor(m => m.ProductDto.Price)
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.ProductDto.Price, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductDto.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.DisplayNameFor(m => m.ProductDto.DiscountPrice)
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.ProductDto.DiscountPrice, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductDto.DiscountPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.DisplayNameFor(m => m.ProductDto.Weight)
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.ProductDto.Weight, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductDto.Weight, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.DisplayNameFor(m => m.ProductDto.Description)
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.ProductDto.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductDto.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div><!-- /.box-body -->
                    <div class="box-footer">
                        <button type="submit" class="btn btn-default">Cancel</button>
                        <button type="submit" class="btn btn-info pull-right">Sign in</button>
                    </div><!-- /.box-footer -->
                </form>
            </div><!-- /.box -->
          </div>
    </div>
}
